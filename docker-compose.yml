version: '3.7'

services:

  users:
    build:
      context: ./services/users
      dockerfile: Dockerfile
    volumes:
      - './services/users:/usr/src/app'
    ports:
      - 5001:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
      - SECRET_KEY=budgie_secret_key
    depends_on:
      - users-db

  users-db:
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    ports:
      - 5436:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  client:
    build:
      context: ./services/client
      dockerfile: Dockerfile
    volumes:
      - './services/client:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - 3007:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
      - REACT_APP_API_GATEWAY_URL=${REACT_APP_API_GATEWAY_URL}
      - REACT_APP_EXERCISES_SERVICE_URL=${REACT_APP_EXERCISES_SERVICE_URL}
      - REACT_APP_SCORES_SERVICE_URL=${REACT_APP_SCORES_SERVICE_URL}
    
      

  swagger:
    build:
      context: ./services/swagger
      dockerfile: Dockerfile
    volumes:
        - './services/swagger/swagger.json:/usr/share/nginx/html/swagger.json'
    ports:
      - 3008:8080
    environment:
      - URL=swagger.json
    depends_on:
      - users

  exercises:
    build:
      context: ./services/exercises
      dockerfile: Dockerfile
    volumes:
      - './services/exercises:/usr/src/app'
    ports:
      - 5002:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - USERS_SERVICE_URL=http://users:5000
      - SECRET_KEY=budgie_secret_key
      - DATABASE_URL=postgres://postgres:postgres@exercises-db:5432/exercises_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@exercises-db:5432/exercises_test
    depends_on:
      - users
      - exercises-db

  exercises-db:
    build:
      context: ./services/exercises/project/db
      dockerfile: Dockerfile
    ports:
      - 5437:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  scores:
    build:
      context: ./services/scores
      dockerfile: Dockerfile
    volumes:
      - './services/scores:/usr/src/app'
    ports:
      - 5003:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - USERS_SERVICE_URL=http://users:5000
      - EXERCISES_SERVICE_URL=http://exercises:5000
      - SECRET_KEY=my_precious
      - DATABASE_URL=postgres://postgres:postgres@scores-db:5432/scores_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@scores-db:5432/scores_test
    depends_on:
      - users
      - scores-db
      - exercises

  scores-db:
    build:
      context: ./services/scores/project/db
      dockerfile: Dockerfile
    ports:
      - 5438:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  chat:
    build: ./services/chat
    image: chat
    container_name: chat
    ports:
      - 5005:5000
    volumes:
      - './services/chat:/usr/src/app'
    environment:
      - FLASK_APP=project/__init__.py
      - FLASK_ENV=development

  people:
    build: ./services/people
    image: people
    container_name: people
    ports:
      - 5006:5000
    volumes:
      - './services/people:/usr/src/app'
    environment:
      - FLASK_APP=project/__init__.py
      - FLASK_ENV=development
      # - APP_SETTINGS=project.config.DevelopmentConfig
  
  queue:
    build: ./services/queue
    image: queue
    container_name: queue
    ports:
      - 5004:5000
    volumes:
      - './services/queue:/usr/src/app'
    environment:
      - FLASK_APP=project/__init__.py
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig


  worker:
    image: queue
    command: python manage.py run_worker
    volumes:
      - './services/queue:/usr/src/app'
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
    depends_on:
      - redis

    
  redis:
    image: redis:5.0.7-alpine

  dashboard:
    build: ./services/dashboard
    image: dashboard
    container_name: dashboard
    ports:
      - 9181:9181
    command: rq-dashboard -H redis
    depends_on:
      - redis
  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
    depends_on:
      - queue
      - users
      - client
      - chat 
      - exercises
      - scores
      - dashboard
      - people
      - mongo


  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_secret