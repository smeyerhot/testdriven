{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12600\viewh7800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \
\
docker-compose -f docker-compose.yml up -d --build\
\
cd .\
\
//sets up a new database otherwise: "server error"\
"exec runs command in new container"\
\
\
docker-compose -f docker-compose.yml exec users python manage.py recreate_db\
\
\
\
* docker-compose -f docker-compose.yml up -d --build nginx (runs nginx container)\
\
\
\
docker-compose -f docker-compose.yml exec client npm test -- --verbose\
\
\
python services/swagger/update-spec.py http://DOCKER_MACHINE_IP\
#server inside docker environment\
\
\
docker-machine regenerate-certs testdriven-prod  #regenerate certs\
\
SECRET_KEY=budgie_secret_key\
\
\
\
\
The -d flag is used to run containers in the background.\
\
 Create an ECS repo \
aws ecr create-repository --repository-name REPOSITORY_NAME --region us-west-1\
\
\
\
\

\fs40 AWS
\fs36 \
(inside ssh)\
\
> docker exec -it Container_ID bash\
\
# python manage.py recreate_db\
# python manage.py seed_db}